/*
class Node {
  public:
    int data;
    Node* next;
    Node(int x) {
        data = x;
        next = NULL;
    }
};
*/

class Solution {
  public:
         Node* reverse(Node* head){
            Node *prev = nullptr, *curr = head , *next;
            
            while(curr != nullptr){
                next = curr->next;
                curr->next = prev;
                prev = curr;
                curr = next;
            }
            return prev;
        }
        
    Node* addTwoLists(Node* head1, Node* head2) {
        // code here
      
            head1 = reverse(head1);
            head2 = reverse(head2);
            
            Node* sum = NULL;
            int carry = 0;
            
            while(head1 != NULL || head2 != NULL || carry != 0){
                int val = carry;
                
                if(head1){
                    val += head1->data;
                    head1 = head1->next;
                }
                
                if(head2){
                    val += head2->data;
                    head2 = head2->next;
                }
                
                carry = val/10;
                val %= 10;
                
                Node* resultNode = new Node(val);
                resultNode->next = sum;
                sum = resultNode;
            }
            
            while(sum != NULL && sum->data == 0){
                Node* temp = sum;
                sum = sum->next;
                delete temp;
            }
            
            if(sum == NULL){
                return new Node(0);
            }
        
        return sum;
    }
};
