class Solution {
  public:
    bool dfs(vector<vector<char>>& board , int x, int y, const string& word, int index){
        if(index == word.size()) return true;
        
        int n  = board.size(), m = board[0].size();
        
        if(x < 0 || y<0 ||x>=n||y>=m||board[x][y] != word[index])
           return false;
           
        char temp = board[x][y];
        board[x][y] = '#';
        
        bool found = dfs(board, x+1, y, word, index+1) ||
                     dfs(board, x-1, y, word, index+1) ||
                     dfs(board, x, y+1, word, index+1) ||
                     dfs(board, x, y-1, word, index+1) ;
                     
        board[x][y] = temp;
        
        return found;
        
    }
    bool isWordExist(vector<vector<char>>& board, string& word) {
        // Code here
        int n = board.size();
        int m = board[0].size();
        
        for(int i = 0 ; i<n ; i++){
            for(int j = 0 ; j<m ; j++){
                if(board[i][j] == word[0]){
                    if(dfs(board, i , j , word, 0))
                        return true;
                    
                }
            }
            
        }
        return false;
        
    }
};
